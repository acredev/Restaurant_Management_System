/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2023-05-26 02:00:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.mypage.myinfo;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class myinfo_005fremove_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");

	//파라미터를 통해 받아온 아이디 값을 변수에 저장
	String user_id = request.getParameter("user_id");
	//세션에 MEMBERID 객체를 저장 (user_id 정보를 가져옴)
	session.setAttribute("MEMBERID", user_id);
	//MEMBERID 객체의 값을 memberId 문자열 변수에 저장
	String memberId = (String)session.getAttribute("MEMBERID");
	//만약, memberId 값이 null 이면 false(비로그인 상태)
	//memberId 값이 무언가 있다면 true(로그인 상태)
	boolean login = memberId == null ? false : true;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("	    <meta charset=\"utf-8\">\r\n");
      out.write("	    <title>마이페이지 - 회원탈퇴</title>\r\n");
      out.write("	    <link href=\"../../../css/mypage.css\" rel=\"stylesheet\">\r\n");
      out.write("	    <link href=\"../../../css/buttonST.css\" rel=\"stylesheet\">\r\n");
      out.write("	    <link rel=\"icon\" href=\"../../../img/favicon1.png\" type=\"image/x-icon\" sizes=\"16x16\">\r\n");
      out.write("        <script type=\"text/javascript\">\r\n");
      out.write("			function agreeCheck(frm)\r\n");
      out.write("			{\r\n");
      out.write("				if (frm.checkButton.disabled==true)\r\n");
      out.write("				frm.checkButton.disabled=false\r\n");
      out.write("				else\r\n");
      out.write("				frm.checkButton.disabled=true\r\n");
      out.write("			}\r\n");
      out.write("		</script>\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("	");

	if (login)
	{
      out.write("\r\n");
      out.write("		<form name=\"myinfo_remove\" class=\"myinfo_remove\" action=\"myinfo_remove_chk.jsp\" method=\"post\">\r\n");
      out.write("    	<div class=\"outBox\">\r\n");
      out.write("	    	<div class=\"boxtitle\">\r\n");
      out.write("	    		<a class=\"topid\">회원 탈퇴</a>\r\n");
      out.write("                <hr>\r\n");
      out.write("                <textarea cols=\"40\" rows=\"5\" readonly=\"readonly\"> \r\n");
      out.write("회원 탈퇴시 고객님의 \r\n");
      out.write("개인정보는 모두 삭제되며,\r\n");
      out.write("복구 할 수 없습니다.\r\n");
      out.write("				</textarea>\r\n");
      out.write("				<br>\r\n");
      out.write("                <input type=\"checkbox\" name=\"agree\" id=\"byecheck\" onClick=\"agreeCheck(this.form)\"> 위 내용을 확인 하였습니다.        \r\n");
      out.write("		</div>\r\n");
      out.write("		<button type=\"button\" name=\"checkButton\" id=\"byebtn\" class=\"tagbarBT\" disabled onclick=\"myinfo_remove_chk()\"> 탈퇴하기</button>\r\n");
      out.write("		\r\n");
      out.write("		<!-- 다음 페이지로 파라미터값을 넘기기 위한 input hidden -->\r\n");
      out.write("		<input type=\"hidden\" name=\"user_id\" id=\"user_id\" value=\"");
      out.print(user_id);
      out.write("\"> \r\n");
      out.write("        </div>            \r\n");
      out.write("	</form>\r\n");
      out.write("	");

	}
	else
	{
      out.write("\r\n");
      out.write("		<form name=\"myinfo_remove\">\r\n");
      out.write("			<div class=\"outBox\">\r\n");
      out.write("				<div class=\"boxtitle\">\r\n");
      out.write("					<img src=\"../../../img/Logo4_warning.png\" alt=\"\" class=\"loginImg\" onclick=\"location.href='../../../index.jsp'\">\r\n");
      out.write("        			<h1>비로그인 상태입니다.</h1>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("	");

	}
      out.write("\r\n");
      out.write("	</body>\r\n");
      out.write("	<script src=\"../../../js/mypage.js\"></script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
